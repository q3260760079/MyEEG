https://github.com/bsl-tools/bsl
https://support.neurosity.co/hc/en-us/articles/360039387812-Reading-data-into-Python-via-LSL
https://blog.csdn.net/mainspeak/article/details/131226342
https://zhuanlan.zhihu.com/p/551306898
实时峰值检测算法主要用于在时间序列数据中快速准确地识别出峰值信号，
这些算法通常需要具备高效性、鲁棒性以及对新数据点的实时响应能力。
以下是几种在实时峰值检测中常用的算法：
自动多尺度峰值查找算法（AMPD） 
AMPD算法是一种适用于周期性或准周期性信号的峰值检测方法。它通过多尺度的滑动窗口来寻找局部最大值，具有自适应性，抗噪声能力强，并且对周期性的要求不高。算法本身几乎没有超参数，无需调参。优化后的Python实现代码已经在中提供。

平滑Z分数算法（Smoothed Z-score Algorithm） 
这种算法用于时序异常检测，可以检测实时时间序列数据中的峰值信号并且平滑数据。它利用数据的均值和标准差来判断数据是否为异常值，通过一个滑动窗口来计算窗口中的均值和标准差，然后根据阈值和影响因子来平滑曲线和检测峰值。

基于z分数的稳健峰值检测算法 
这个算法基于离散原理，如果新数据点与给定的移动平均值偏离了一定数量的标准偏差，则算法会发出信号。它通过构造单独的移动平均值和标准偏差来避免信号干扰阈值，从而以大致相同的精度识别未来的信号。

简单阈值检测 
一种简单的方法是检测局部最大值，即当一个时间点的值大于其前后时间点的值时，认为该时间点是一个峰值。这种方法简单直观，但可能对噪声敏感。

CSDN博客中提到的AMPD算法的C语言实现 
虽然具体实现细节未在摘要中提供，但该博客提到了AMPD算法的C语言版本，这表明AMPD算法的实现不仅限于Python，还可以用其他语言实现以适应不同的应用场景。

实时时间序列中的峰值信号检测 
该博客文章探讨了用于检测实时时间序列数据中的突然峰值的稳健算法，虽然没有提供具体的算法细节，但它强调了算法的稳健性和实时性。